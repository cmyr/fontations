on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - "*"
  schedule:
    - cron: '22 2 * * *' # run at 2:22 every day

name: Continuous integration

jobs:
  check:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - run: rustup component add rustfmt

      - name: rustfmt check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: cargo doc
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --all-features --document-private-items

  clippy-lint:
    name: Clippy lints
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          profile: minimal
          override: true

      #- run: git submodule update --init --recursive

      - name: cargo clippy --all-features
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features --all-targets -- -D warnings

      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --no-default-features -- -D warnings

  test-stable:
    name: cargo test stable
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-targets --all-features

  ensure-clean-codegen:
    name: check codegen is up-to-date
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: run codegen
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: --bin=codegen resources/codegen_plan.toml
      - name: ensure no unstaged changes
        run: |
          git add .
          git status -sb
          git diff-index --quiet HEAD --

  check-no-std:
    name: cargo check no std
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true


      - name: cargo check font-types
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --manifest-path=font-types/Cargo.toml --no-default-features

      - name: cargo check read-fonts
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --manifest-path=read-fonts/Cargo.toml --no-default-features

  check-wasm:
    name: cargo check wasm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - run: rustup target add wasm32-unknown-unknown
      - uses: actions-rs/cargo@v1
        with:
          command: check
          args: --manifest-path=write-fonts/Cargo.toml --target wasm32-unknown-unknown

